#!/usr/bin/env bash

die() { echo "$*" >&2; exit 6; }  # complain to STDERR and exit with error
needs_arg() { if [ -z "$OPTARG" ]; then die "No arg for --$OPT option"; fi; }

while getopts rc-: OPT; do
  # support long options: https://stackoverflow.com/a/28466267/519360
  if [ "$OPT" = "-" ]; then   # long option: reformulate OPT and OPTARG
    OPT="${OPTARG%%=*}"       # extract long option name
    OPTARG="${OPTARG#$OPT}"   # extract long option argument (may be empty)
    OPTARG="${OPTARG#=}"      # if long option argument, remove assigning `=`
  fi
  case "$OPT" in
    c | clean )    clean=true ;;
    r | real-clean )    real_clean=true ;;
    ??* )          die "Illegal option --$OPT" ;;  # bad long option
    ? )            exit 5 ;;  # bad short option (error reported via getopts)
  esac
done
shift $((OPTIND-1)) # remove parsed options and args from $@ list

SOURCE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )

cd $SOURCE_DIR

if [[ $? != 0 ]]; then
	echo "[$?] unable to cd to source directory..."
	exit 1
fi

sudo docker-compose ps --services --filter "status=running" 2>/dev/null | grep -w "vcache_mgr" > /dev/null

if [ $? != 0 ]; then
	echo "vcache manager containers are not running..."
fi

if [ $? != 0 ]; then
    echo "vcache manager containers are not running..."
fi

if [[ $real_clean ]]; then
    echo "deep cleaning volumes and images from the vcache manager deployment..."
    sudo docker-compose down --volumes --rmi local --remove-orphans --timeout 35
    if [ $? != 0 ]; then
        echo "[$?] an error or timeout ocurred deep cleaning the vcache manager deployment"
        exit 3
    fi
elif [[ $clean ]]; then
    echo "cleaning volumes and images from the vcache manager deployment..."
    sudo docker-compose down --volumes --remove-orphans --timeout 35
    if [ $? != 0 ]; then
        echo "[$?] an error or timeout ocurred cleaning the vcache manager deployment"
        exit 3
    fi
else
    echo "stopping vcache managercontainers..."
    sudo docker-compose down
    if [[ $? != 0 ]]; then
        echo "[$?] an error occured stopping vcache, exiting..."
        exit 2
    fi
    echo "vcache manager stopped..."
fi

exit 0
