#!/usr/bin/env bash

usage() {
    echo "Usage: $0 [-d|--debug] [-h|--help]"
    echo "Options:"
    echo "  -d, --debug  Enable debug mode - no detach, compose output to stdout "
    echo "  -h, --help   Show this help message"
}

options=$(getopt -l "help,debug" -o "hd" -n "$0" -- "$@")

if [ $? -ne 0 ]; then
    usage
    exit 1
fi

eval set -- "$options"
while true
do
    case "$1" in
        -d|--debug )
            debug=true
            shift
            ;;
        -h|--help )
            usage
            exit 0
            ;;
        -- )
            shift
            break
            ;;
        * )
            usage
            exit 1
            ;;
    esac
done

SOURCE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )

cd $SOURCE_DIR

if [[ $? != 0 ]]; then
	echo "[$?] unable to cd to source directory..."
	exit 1
fi

DC_VERSION=$(sudo docker-compose version | head -n 1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
if [ $? != 0 ]; then
    echo "please install docker-compose and provide sudo access..."
    exit 2
else
	echo "running docker-compose (>= 1.29 required): ${DC_VERSION}"
fi

sudo docker-compose ps --services --filter "status=running" 2>/dev/null | grep -w "vcache_mgr" > /dev/null

if [ $? == 0 ]; then
	echo "vcache manager containers already running..."
	exit 3
fi

VCACHE_MGR_VERSION=`git describe 2> /dev/null`
if [[ $? != 0 ]]; then
	if [[ -r .version ]]; then
		VCACHE_MGR_VERSION=`cat .version`
	else
	    echo "[$?]no git revision or version.txt file detected, using: 0.0.0"
	    VCACHE_MGR_VERSION="0.0.0"
	fi
fi
export VCACHE_MGR_VERSION

if [[ -f .env && -r .env ]]; then
	echo "using existing .env file..."
	echo "----- .env ----"
	cat .env
	echo "--------------"
else
	echo "generating .env file..."
	read -p "enter the vcache manager hostname[$HOSTNAME]: " hostname
	hostname=${hostname:-$HOSTNAME}
    echo "VCACHE_MGR_HOSTNAME=${hostname}" > .env
fi

if [[ "$VCACHE_MGR_VERSION" != "0.0.0" ]]; then
    # update or add the VCACHE_MGR_VERSION to .env
    perl -i -ne "\$found++ if s/VCACHE_MGR_VERSION=\S+/VCACHE_MGR_VERSION=${VCACHE_MGR_VERSION}/;\
 \$_ .= \"VCACHE_MGR_VERSION=${VCACHE_MGR_VERSION}\\n\" if eof and not \$found; print;" .env
fi

echo "cleaning up previous deployment..."
sudo docker-compose down

echo "starting vcache manager (${VCACHE_MGR_VERSION}) ..."

if [[ $debug ]]; then
	sudo docker-compose up
    if [[ $? != 0 ]]; then
        echo "an error occured starting vcache manager ($?) (debug), exiting..."
        exit 5
    fi
    exit 0
else
	sudo docker-compose up -d
    if [[ $? != 0 ]]; then
        echo "an error occured starting vcache manager ($?), exiting..."
        exit 4
    else
        echo "vcache manager started!"
    fi

fi

exit 0
