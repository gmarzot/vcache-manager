#!/usr/bin/env bash

usage() {
    echo "Usage: $0 [-c|--clean] [-r|--real-clean] [-A|--no-ansi] [-h|--help]"
    echo "Options:"
    echo "  -c, --clean       stop, down, and remove volumes "
    echo "  -r, --real-clean  stop, down, remove volumes, remove images "
    echo "  -h, --help        show this help message"
}

options=$(getopt -l "help,clean,real-clean" -o "hcr" -n "$0" -- "$@")

if [ $? -ne 0 ]; then
    usage
    exit 1
fi

eval set -- "$options"
while true
do
    case "$1" in
        -c|--clean )
            clean=true
            shift
            ;;
        -r|--real-clean )
            real_clean=true
            shift
            ;;
        -h|--help )
            usage
            exit 0
            ;;
        -- )
            shift
            break
            ;;
        * )
            usage
            exit 1
            ;;
    esac
done

SOURCE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )

cd $SOURCE_DIR

if [[ $? != 0 ]]; then
	echo "[$?] unable to cd to source directory..."
	exit 1
fi

sudo docker-compose ps --services --filter "status=running" 2>/dev/null | grep -w "vcache_mgr" > /dev/null

if [ $? != 0 ]; then
	echo "vcache manager containers are not running..."
fi

if [ $? != 0 ]; then
    echo "vcache manager containers are not running..."
fi

if [[ $real_clean ]]; then
    echo "deep cleaning volumes and images from the vcache manager deployment..."
    sudo docker-compose down --volumes --rmi local --remove-orphans --timeout 35
    if [ $? != 0 ]; then
        echo "[$?] an error or timeout ocurred deep cleaning the vcache manager deployment"
        exit 3
    fi
elif [[ $clean ]]; then
    echo "cleaning volumes and images from the vcache manager deployment..."
    sudo docker-compose down --volumes --remove-orphans --timeout 35
    if [ $? != 0 ]; then
        echo "[$?] an error or timeout ocurred cleaning the vcache manager deployment"
        exit 3
    fi
else
    echo "stopping vcache managercontainers..."
    sudo docker-compose down
    if [[ $? != 0 ]]; then
        echo "[$?] an error occured stopping vcache, exiting..."
        exit 2
    fi
    echo "vcache manager stopped..."
fi

exit 0
